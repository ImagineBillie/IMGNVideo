@model IEnumerable<IMGNVideo.Models.YouTubeVideo>

@{
    ViewData["Title"] = "Trending";
}

@functions {
    public string GetRelativeTime(DateTime publishedDate)
    {
        var timeSpan = DateTime.Now - publishedDate;
        if (timeSpan.TotalDays >= 365)
            return $"{(int)(timeSpan.TotalDays / 365)} year{(timeSpan.TotalDays / 365 >= 2 ? "s" : "")} ago";
        if (timeSpan.TotalDays >= 30)
            return $"{(int)(timeSpan.TotalDays / 30)} month{(timeSpan.TotalDays / 30 >= 2 ? "s" : "")} ago";
        if (timeSpan.TotalDays >= 1)
            return $"{(int)timeSpan.TotalDays} day{(timeSpan.TotalDays >= 2 ? "s" : "")} ago";
        if (timeSpan.TotalHours >= 1)
            return $"{(int)timeSpan.TotalHours} hour{(timeSpan.TotalHours >= 2 ? "s" : "")} ago";
        if (timeSpan.TotalMinutes >= 1)
            return $"{(int)timeSpan.TotalMinutes} minute{(timeSpan.TotalMinutes >= 2 ? "s" : "")} ago";
        return "just now";
    }

    public string GetLimitedDescription(string description, int wordLimit = 20)
    {
        if (string.IsNullOrWhiteSpace(description))
            return "";
        var words = description.Split(' ');
        if (words.Length <= wordLimit)
            return description;
        return string.Join(" ", words.Take(wordLimit)) + "...";
    }

    private string FormatViewCount(long viewCount)
    {
        if (viewCount < 1000)
            return viewCount.ToString();
        else if (viewCount < 1_000_000)
        {
            double thousands = viewCount / 1000.0;
            return thousands.ToString("0.#") + "K";
        }
        else if (viewCount < 1_000_000_000)
        {
            double millions = viewCount / 1_000_000.0;
            return millions.ToString("0.#") + "M";
        }
        else
        {
            double billions = viewCount / 1_000_000_000.0;
            return billions.ToString("0.#") + "B";
        }
    }
}


<div class="container">
    @* <div class="jumbotron text-center text-white" style="background: url('~/wwwroot/Media/trendBG.png') no-repeat center center / cover; height: 250px; margin-top: 80px;"> *@
    @*     <h1 class="display-4">Trending Now</h1> *@
    @* </div> *@
    <!-- Hero / Intro Section -->
    <div class="jumbotron rounded-3 text-center position-relative" style="margin-top: 80px; background:none;">
        <img src="~/Media/trendBG.png" alt="Trending Logo" class="img-fluid mx-auto d-block" style="max-width: 250px;">
        <h2 class="text-center subText"><u>Trending Videos</u></h2>
    </div>



    <!-- Featured Video Section -->
    @if (!Model.Any())
    {
        <p class="text-center">No videos available.</p>
    }
    else
    {
        <div id="video-container" class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var video in Model)
            {
                <div class="col video-item">
                    <div class="card h-100 d-flex flex-column">
                        <img src="@video.ThumbnailUrl" class="card-img-top" alt="@video.Title" />
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@video.Title</h5>
                            <small style="color:gray">@video.ChannelName</small>
                            <div class="d-flex mb-2">
                                <small class="text-end" style="color:gray">
                                    @FormatViewCount(video.ViewCount) views
                                </small>
                                &nbsp;
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="#808080" class="bi bi-dot mt-1" viewBox="0 0 16 16">
                                    <path d="M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3" />
                                </svg>
                                <small style="color:gray">@GetRelativeTime(video.PublishedAt)</small>
                            </div>
                            <p class="card-text flex-grow-1" style="color:gray">@GetLimitedDescription(video.Description, 15)</p>
                            <a href="@($"https://www.youtube.com/watch?v={video.VideoId}")" target="_blank" class="btn btn-primary btn-sm mt-auto">
                                Watch Video
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>